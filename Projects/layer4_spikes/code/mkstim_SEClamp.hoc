objref SEClamp_list, rec_SEClamp_t_list, rec_SEClamp_i_list, rec_SEClamp_t_vec, rec_SEClamp_i_vec

SEClamp_list = new List()
rec_SEClamp_t_list = new List()
rec_SEClamp_i_list = new List()

proc mkstim_SEClamp() {localobj tmp_stim
// $s1 -- the string containing information about the cell and the section;
// $2 -- the position at which the clamp should be inserted;
// $3 -- holding voltage;
// $4 -- duration.

  strdef tmp_string
  sprint(tmp_string,"access %s", $s1)
  //print tmp_string
  execute(tmp_string)
  tmp_stim = new SEClamp($2)

  SEClamp_list.append(tmp_stim)

  tmp_stim.amp1 = $3
  tmp_stim.dur1 = $4
  tmp_stim.rs = 1.0e-5 //MOhm.

  rec_SEClamp_t_vec = new Vector()
  rec_SEClamp_t_list.append(rec_SEClamp_t_vec)
  rec_SEClamp_i_vec = new Vector()
  rec_SEClamp_i_list.append(rec_SEClamp_i_vec)

  rec_SEClamp_t_vec.record(&t)
  rec_SEClamp_i_vec.record(&tmp_stim.i)

}





proc SEClamp_write_i() {localobj tmp_matrix, f_out_data
// $s1 -- name of the file for writing out the data;
// $2 -- ID of the value that was previously recorded.

  rec_SEClamp_t_vec = new Vector()
  rec_SEClamp_i_vec = new Vector()

  rec_SEClamp_t_vec = rec_SEClamp_t_list.o($2)
  rec_SEClamp_i_vec = rec_SEClamp_i_list.o($2)

  tmp_matrix = new Matrix()
  tmp_matrix.resize(rec_SEClamp_i_vec.size(),2)
  tmp_matrix.setcol(0, rec_SEClamp_t_vec)
  tmp_matrix.setcol(1, rec_SEClamp_i_vec)

  f_out_data = new File()
  f_out_data.wopen($s1)
  tmp_matrix.fprint(0, f_out_data, " %g")
  f_out_data.close()

}

