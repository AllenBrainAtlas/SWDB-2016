objref spiketime, spikeid

// for use before parallelizing the code
// assumes all cells have a connect2target
proc record_spikes() {local i  localobj nc, nil
// $1 = number of cells.
	spiketime = new Vector()
	spikeid = new Vector()
	for i=0, $1 - 1 if (pc.gid_exists(i)) {
                pc.threshold(i, -15.0)
		pc.spike_record(i, spiketime, spikeid)
	}
}

proc spike2file() {local rank, i, time  localobj f
// $s1 -- name of the file for writing out the data;
	time = startsw()
	f = new File()
	f.wopen($s1)
	f.close()
	pc.barrier()
  // naive serialization. Much faster output desirable if nhost > 1000
  for rank = 0, pc.nhost-1 {
    if (rank == pc.id) {
	f.aopen($s1)
	for i=0, spiketime.size-1 {
		f.printf("%.3f %d\n", spiketime.x[i], spikeid.x[i])
	}
	f.close()
    }
    pc.barrier()
  }
  if (pc.id == 0) { printf("spike2file time %g\n", startsw() - time) }
}
